{"version":3,"sources":["components/Container/Container.styles.jsx","components/Container/Container.jsx","components/ContactForm/ContactForm.styles.jsx","components/Filter/Filter.styles.jsx","components/Filter/Filter.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styles.jsx","components/ContactList/ContactList.jsx","App.jsx","index.js"],"names":["Title","Containers","Container","title","children","Label","Input","ButtonAdd","Span","Text","Filter","value","onChange","type","name","placeholder","pattern","required","ContactForm","onSubmit","useState","setName","number","setNumber","nameInputId","uuidv4","numberInputId","handleChange","e","currentTarget","reset","preventDefault","htmlFor","id","disabled","Contact","ContactItem","ButtonDelete","ContactList","contacts","onDeleteContact","map","onClick","App","JSON","parse","localStorage","getItem","ContactsData","setContacts","filter","setFilter","contactFirstRender","useRef","useEffect","current","parsedContacts","setItem","stringify","contact","some","alert","length","toLowerCase","includes","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQAGO,IAAMA,EAAK,+HAMLC,EAAU,iR,OCNR,SAASC,EAAT,GAA0C,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxC,OACI,eAACH,EAAD,WACI,cAACD,EAAD,UAAQG,IACPC,KCLN,IAAMC,EAAK,uJAQLC,EAAK,oTAeLC,EAAS,+SAeTC,EAAI,oHCtCV,IAAMC,EAAI,8ECIF,SAASC,EAAT,GAAsC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACpC,OACI,qCACI,cAACH,EAAD,mCACG,cAACH,EAAD,CACSO,KAAK,OACJC,KAAK,OACNC,YAAa,iBACbC,QAAQ,yHACRb,MAAM,kcACdS,SAAUA,EACVD,MAAOA,EACHM,UAAQ,OCdb,SAASC,EAAT,GAAkC,IAAZC,EAAW,EAAXA,SACjC,EAAwBC,mBAAS,IAAjC,mBAAON,EAAP,KAAaO,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOE,EAAP,KAAeC,EAAf,KAEMC,EAAcC,cACdC,EAAgBD,cAEjBE,EAAe,SAAAC,GACxB,MAAwBA,EAAEC,cAAlBf,EAAR,EAAQA,KAAMH,EAAd,EAAcA,MAEd,OAAOG,GACH,IAAK,OACDO,EAAQV,GACR,MAEJ,IAAK,SACDY,EAAUZ,GACV,MAEJ,QAAS,SAYHmB,EAAQ,WACVT,EAAQ,IACRE,EAAU,KAGb,OACO,uBAAMJ,SAbK,SAACS,GAChBA,EAAEG,iBAEJZ,EAASL,EAAMQ,GACfQ,KASM,UACA,eAACzB,EAAD,WACI,cAACG,EAAD,CAAMwB,QAASN,EAAf,kBACI,cAACpB,EAAD,CACIO,KAAK,OACJC,KAAK,OACNC,YAAa,aACbC,QAAQ,yHACRb,MAAM,kcACNc,UAAQ,EACRL,SAAUe,EACVM,GAAIT,EACJb,MAAOG,OAInB,eAACT,EAAD,WACI,cAACG,EAAD,CAAMwB,QAASN,EAAf,oBACC,cAACpB,EAAD,CACCO,KAAK,MACHC,KAAK,SACLC,YAAY,eACZC,QAAQ,yFACRb,MAAM,giBACNc,UAAQ,EACRL,SAAUe,EACVhB,MAAOW,EACPW,GAAIT,OAIT,cAACjB,EAAD,CACKM,KAAK,SACLqB,UAAWpB,IAAQQ,EAFxB,4BCpER,IAAMa,EAAO,uFAKPC,EAAW,gJAMX3B,EAAI,8FAIJ4B,EAAY,uOChBT,SAASC,EAAT,GAAsD,IAA9BC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,gBAC9C,OACI,cAACL,EAAD,UACKI,EAASE,KAAI,gBAAGR,EAAH,EAAGA,GAAInB,EAAP,EAAOA,KAAMQ,EAAb,EAAaA,OAAb,OACV,eAACc,EAAD,WAAsB,eAAC,EAAD,WAAOtB,EAAP,IAAcQ,KACxC,cAACe,EAAD,CAAcK,QAAS,kBAAIF,EAAgBP,IAA3C,sBADsBA,QCGnB,SAASU,IACtB,MAAgCvB,oBAAS,WAAO,IAAD,EAC7C,iBAAOwB,KAAKC,MAAMC,aAAaC,QAAQ,oBAAvC,QAAuDC,KADzD,mBAAOT,EAAP,KAAiBU,EAAjB,KAIA,EAA4B7B,mBAAS,IAArC,mBAAO8B,EAAP,KAAeC,EAAf,KACMC,EAAqBC,kBAAO,GAElCC,qBAAU,WACR,GAAIF,EAAmBG,QAAS,CAC9B,IAAMC,EAAiBZ,KAAKC,MAAMC,aAAaC,QAAQ,aAMvD,OAJIS,GACFP,EAAYO,QAEdJ,EAAmBG,SAAU,GAGjCT,aAAaW,QAAQ,WAAYb,KAAKc,UAAUnB,MAC7C,CAACA,IA+BF,OACE,eAACrC,EAAD,CAAWC,MAAM,YAAjB,UACE,cAACe,EAAD,CAAaC,SA/BK,SAACL,EAAMQ,GAC/B,IAAMqC,EAAU,CACd1B,GAAIR,cACJX,OACAQ,UAGEiB,EAASqB,MAAK,SAACD,GAAD,OAAaA,EAAQ7C,OAASA,KAC9C+C,MAAM,GAAD,OAAI/C,EAAJ,iCAIPmC,GAAY,SAACV,GAAD,OAAeoB,GAAf,mBAA2BpB,UAoBjC,0CACA,cAAC7B,EAAD,CAAQC,MAAOuC,EAAQtC,SAlBH,SAACgB,GAC1BuB,EAAWvB,EAAEC,cAAclB,UAkBrB4B,EAASuB,OAAS,GACjB,cAACxB,EAAD,CAAaC,SAfZA,EAASW,QAAO,SAACS,GAAD,OACrBA,EAAQ7C,KAAKiD,cAAcC,SAASd,EAAOa,kBAcMvB,gBAVhC,SAACyB,GACpBhB,EAAYV,EAASW,QAAO,SAACS,GAAD,OAAYA,EAAQ1B,KAAOgC,YCpD3DC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACzB,EAAD,MAEF0B,SAASC,eAAe,U","file":"static/js/main.500263ec.chunk.js","sourcesContent":["import styled from '@emotion/styled/macro';\r\n\r\n\r\nexport const Title = styled.h1`\r\n   text-align: center;\r\n    color: #000;\r\n    font-weight: bold;\r\n    font-size: 40px;\r\n`;\r\nexport const Containers = styled.div`\r\n width: 400px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  padding: 20px 40px;\r\n\r\n  background-color: rgb(47, 154, 255);\r\n  box-shadow: 1px 1px 3px rgba(0,0,0,0.5);\r\n  border-radius: 5px;\r\n  &:hover{\r\n      box-shadow: 0px 0px 5px  rgba(0,0,0,0.5);\r\n`","import PropTypes from \"prop-types\";\r\nimport { Title, Containers } from \"./Container.styles\";\r\n\r\nexport default function Container ({ title, children }) {\r\n    return (\r\n        <Containers>\r\n            <Title>{title}</Title>\r\n            {children}\r\n      </Containers>\r\n    )\r\n};\r\nContainer.propTypes = {\r\n    title: PropTypes.string,\r\n};","import styled from '@emotion/styled/macro';\r\n\r\nexport const Label = styled.label`\r\nfont-size:18px;\r\nfont-weight:600;\r\njustify-content:center;\r\npadding-bottom: 15px;\r\nmargin:0;\r\n`\r\n\r\nexport const Input = styled.input`\r\n  display: flex;\r\n  padding: 6px;\r\n  margin-bottom: 20px;\r\n  border-radius:5px;\r\n  min-width: 300px;\r\n  cursor: pointer;\r\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px,\r\n    rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset;\r\n\r\n    &:focus{\r\n        border: 2px solid #eee;\r\n        outline: none;\r\n    }\r\n`\r\nexport const ButtonAdd = styled.button`\r\n  background-color: #fff;\r\n  outline: none;\r\n  padding: 6px 8px;\r\n  font-size: 12px;\r\n  line-height: 12px;\r\n  text-transform: uppercase;\r\n  cursor: pointer;\r\n   border-radius:5px;\r\n   border: 1px solid black;\r\n   &:hover {\r\n    box-shadow: 0 0 20px rgba(50, 50, 93, 0.25);\r\n    background: blue;\r\n  }\r\n  `\r\nexport const Span = styled.span`\r\n font-size: 20px;\r\n  font-weight: 400;\r\n  margin-bottom: 7px;\r\n  `","import styled from \"@emotion/styled/macro\";\r\n\r\nexport const Text = styled.p`\r\nfont-size:18px;\r\n`","\r\nimport PropTypes from 'prop-types';\r\nimport { Input } from '../ContactForm/ContactForm.styles';\r\nimport { Text } from './Filter.styles';\r\n\r\n\r\nexport default function Filter({ value, onChange }) {\r\n    return (\r\n        <>\r\n            <Text>Find contact by name</Text>\r\n               <Input\r\n                        type=\"text\"\r\n                         name=\"name\"\r\n                        placeholder= \"Name to search\"\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                onChange={onChange}\r\n                value={value}\r\n                    required>\r\n                </Input>\r\n        </>\r\n    )\r\n}\r\nFilter.propTypes = {\r\n    value: PropTypes.string,\r\n    onChange: PropTypes.func.isRequired,\r\n};","import {useState} from \"react\";\r\nimport { Label, Input, ButtonAdd, Span } from './ContactForm.styles'\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport default function ContactForm({onSubmit}) {\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('')\r\n\r\n   const  nameInputId = uuidv4();\r\n   const  numberInputId = uuidv4();\r\n    \r\n  const  handleChange = e => {\r\nconst { name, value } = e.currentTarget;\r\n      \r\nswitch(name){\r\n    case \"name\":\r\n        setName(value);\r\n        break;\r\n    \r\n    case \"number\":\r\n        setNumber(value);\r\n        break;\r\n\r\n    default: return;\r\n      };\r\n    };\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n      \r\n      onSubmit(name, number);\r\n      reset();\r\n    };\r\n\r\n    const reset = () => {\r\n        setName('');\r\n        setNumber('');\r\n    }\r\n\r\n     return (\r\n            <form onSubmit={handleSubmit}>\r\n            <Label>\r\n                <Span htmlFor={numberInputId}>Name</Span>\r\n                    <Input\r\n                        type=\"text\"\r\n                         name=\"name\"\r\n                        placeholder= \"Enter name\"\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required\r\n                        onChange={handleChange}\r\n                        id={nameInputId}\r\n                        value={name}\r\n                    />\r\n            </Label>\r\n        \r\n            <Label>\r\n                <Span htmlFor={numberInputId}>Number</Span>\r\n                 <Input\r\n                  type=\"tel\"\r\n                    name=\"number\"\r\n                    placeholder=\"Enter number\"\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    required\r\n                    onChange={handleChange}\r\n                    value={number}\r\n                    id={nameInputId}\r\n                />\r\n                 </Label>\r\n               \r\n               <ButtonAdd\r\n                    type=\"submit\"\r\n                    disabled={!name|| !number} >Add contact</ButtonAdd>\r\n              </form>\r\n        )\r\n    \r\n}\r\n","import styled from '@emotion/styled/macro';\r\n\r\n\r\n\r\nexport const Contact = styled.ul`\r\nwidth: 300px;\r\npadding: 0;\r\n`\r\n\r\nexport const ContactItem = styled.li`\r\ndisplay:flex;\r\ntext-align:center;\r\nalign-items: center;\r\njustify-content: space-around;\r\n`\r\nexport const Text = styled.p`\r\nfont-size:18px;\r\nfont-weight: 500;\r\n`\r\nexport const ButtonDelete = styled.bytton`\r\nbackground-color: #fff;\r\ncursor: pointer;\r\n  border-radius:5px;\r\n  border: 1px solid black;\r\n  cursor: pointer;\r\n  &:hover {\r\n    box-shadow: 0 0 20px rgba(50, 50, 93, 0.25);\r\n    background: blue;\r\n  }\r\n`","import PropTypes from 'prop-types';\r\nimport { Contact, ContactItem, ButtonDelete, Text } from './ContactList.styles'\r\n\r\n export default function ContactList ({ contacts, onDeleteContact }) {\r\n    return(\r\n        <Contact>\r\n            {contacts.map(({ id, name, number }) => (\r\n                <ContactItem key={id}><Text>{name}:{number}</Text>\r\n            <ButtonDelete onClick={()=>onDeleteContact(id)}>Delete</ButtonDelete>\r\n            </ContactItem>\r\n        ))}\r\n        </Contact>\r\n    )\r\n}\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            number: PropTypes.string.isRequired,\r\n        })\r\n    ).isRequired,\r\n    onDeleteContact: PropTypes.func.isRequired, \r\n}","import { useState, useEffect, useRef} from 'react'\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactsData from './components/Data/contacts.json';\nimport Container from './components/Container/Container';\nimport Filter from './components/Filter/Filter.jsx';\nimport ContactForm from './components/ContactForm/ContactForm.jsx'\nimport ContactList from './components/ContactList/ContactList'\n\n\n\nexport default function App() {\n  const [contacts, setContacts] = useState(() => {\n    return JSON.parse(localStorage.getItem('contacts')) ?? ContactsData\n  });\n\n  const [filter, setFilter] = useState('');\n  const contactFirstRender = useRef(true);\n\n  useEffect(() => {\n    if (contactFirstRender.current) {\n      const parsedContacts = JSON.parse(localStorage.getItem('contacts'))\n\n      if (parsedContacts) {\n        setContacts(parsedContacts)\n      }\n      contactFirstRender.current = false\n      return\n    }\n  localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\nconst formSubmitHandler = (name, number) => {\n  const contact = {\n    id: uuidv4(),\n    name,\n    number,\n  };\n\n  if (contacts.some((contact) => contact.name === name)) {\n    alert(`${name} is already in the contacts.`);\n    return;\n  }\n   \n  setContacts((contacts) => [contact, ...contacts])\n \n}\n  const changeFilterInput = (e) => {\n   setFilter( e.currentTarget.value);\n  };\n \n const onFilteredContacts = () => {\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    )\n }\n   \n const deleteContact = (contactId) => {\n    setContacts(contacts.filter((contact)=> contact.id !== contactId))\n  }\n\n    return (\n      <Container title=\"Phonebook\">\n        <ContactForm onSubmit={formSubmitHandler}></ContactForm>\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={changeFilterInput}></Filter>\n        {contacts.length > 0 && (\n          <ContactList contacts={onFilteredContacts()} onDeleteContact={deleteContact}></ContactList>)}\n      </Container>\n    );\n    }\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}